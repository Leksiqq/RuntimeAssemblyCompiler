<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0-windows</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AssemblyName>Net.Leksi.RuntimeAssemblyCompiler</AssemblyName>
    <RootNamespace>Net.Leksi.RuntimeAssemblyCompiler</RootNamespace>
    <PackageReleaseNotes>1.3.0 Добавлена возможность получить абсолютный путь к сгенериррованному файлу проекта.
      Добавлена возможность установить обработчик события, что файл проекта сгенерирован, так что есть возможность
      обработать его дополнительно перед компиляцией.
      Исправлены найденные ошибки.
      1.3.0 Added the ability to get the absolute path to the generated project file.
      Added the ability to set an event handler that the project file has been generated, so it is possible
      process it further before compiling.
      Found bugs fixed.

      1.2.1 Добавлена возможность получить абсолютный путь к созданному nuget-пакету.
      Исправлены ошибки при работе с nuget-пакетами, создаваемыми во время исполнения.
      1.2.1 Added the ability to get the absolute path to the created nuget package.
      Fixed bugs when working with nuget packages created at runtime.

      1.2.0  Добавлена возможность задать локаль вывода компилятора.
      Изменена структура папки назначения проекта.
      Изменена конфигурация по умолчанию на специальную: RAC.
      Задание конфигурации, отличной от конфигурации по умолчанию, перенесено в ProjectOptions.
      1.2.0 Added the ability to set the compiler output locale.
      The structure of the project destination folder has been changed.
      Changed default configuration to special: RAC.
      Setting a non-default configuration has been moved to ProjectOptions.

      1.1.0 Добавлена функциональность:
      возможность игнорировать определённые предупреждения компилятора;
      возможность выбрасывать исключение при наличии предупреждений компилятора, кроме игнорируемых;
      возможность получать лог компиляции в виде строки при выключенном режиме IsVerbose;
      возможность использовать дополнительные опции компилятора;
      возможность задавать расположение программы dotnet.exe.
      1.1.0 Added functionality:
      the ability to ignore certain compiler warnings;
      the ability to throw an exception in the presence of compiler warnings, except for ignored ones;
      the ability to receive the compilation log as a string when the IsVerbose mode is off;
      the ability to use additional compiler options;
      the ability to set the location of the dotnet.exe program.


      1.0.38 Исправлен метод Project.GetLibraryFile(string path).
      1.0.38 Project.GetLibraryFile(string path) method fixed.

      1.0.37 Добавлены методы, чтобы определить или отменить определение символов для условной компиляции.
      1.0.37 A possibility to define or undefine symbols for conditional compilation added.</PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  <Choose>
    <When Condition=" '$(Configuration)'=='Release' ">
      <PropertyGroup>
        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
        <Version>1.3.0</Version>
        <Authors>leksiq</Authors>
        <Title>Runtime Assembly Compiler</Title>
        <Description>
          Библиотека Net.Leksi.RuntimeAssemblyCompiler позволяет компилировать и загружать сборки во время работы приложения.
          The Net.Leksi.RuntimeAssemblyCompiler library allows you to compile and load assemblies while your application is running.
        </Description>
        <Copyright>Алексей Юрьевич Захаров &lt;leksi@leksi.net&gt;, 2023</Copyright>
        <PackageProjectUrl>https://github.com/Leksiqq/RuntimeAssemblyCompiler/wiki</PackageProjectUrl>
        <RepositoryUrl>https://github.com/Leksiqq/RuntimeAssemblyCompiler</RepositoryUrl>
        <PackageTags>runtime-compiler;unit-testing</PackageTags>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
      </PropertyGroup>
      <ItemGroup>
        <None Update="..\README.md">
          <Pack>True</Pack>
          <PackagePath>\</PackagePath>
        </None>
      </ItemGroup>
    </When>
  </Choose>
  <Target Name="CopyPackage" AfterTargets="Pack" Condition=" '$(Configuration)'=='Release' ">
    <Move SourceFiles="$(OutputPath)..\$(PackageId).$(PackageVersion).nupkg" DestinationFolder="W:\C#\nuget.local" />
  </Target>
  <ItemGroup>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
